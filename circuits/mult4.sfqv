# 
# 4 bit multiplier
# 

# input and input pattern definitions

	input reset_in [0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0];
	input load_in  [0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0];
	input y_in     [0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,0,0,0,0,0];
	input x_in     [0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0];
	input s_in     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	input clk      [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];

# output definitions

	output reset_out;
	output load_out;
	output y_out;
	output x_out;
	output s_out;




# circuit definition
{
	# wire definitions
	wire LO_0, XO_0, RO_0, S1_0;
	wire Y_1, PP_1, S0_1, C0_1, S1_1, C1T_1, C1_1, LO_1, XO_1, RO_1;
	wire Y_2, PP_2, S0_2, C0_2, S1_2, C1T_2, C1_2, LO_2, XO_2, RO_2, s_in2;
	wire Y_3, PP_3, S0_3, C0_3, S1_3, C1T_3, C1_3, LO_3, XO_3, RO_3, s_in3;
	wire Y_4, PP_4, S0_4, C0_4, S1_4, C1T_4, C1_4, LO_4, XO_4, RO_4, s_in4;


	assign LO_0 = load_in;
	assign XO_0 = x_in;
	assign RO_0 = reset_in;

#--------------------------------------------------
# PE 1
#--------------------------------------------------
	Y_1  = ND G1_1( LO_0@0, y_in@1, LO_0@2 );
	PP_1 = ND G2_1( LO_0@0, Y_1@1, XO_0@2 );
	
	S0_1 = XOR G3_1( PP_1@0, s_in@0, clk@1 );
	C0_1 = AND G4_1( PP_1@0, s_in@0, clk@1 );
	
	
	S1_1 = XOR G5_1( S0_1@0, C1_1@0, clk@1 );
	C1T_1= AND G6_1( S0_1@0, C1_1@0, clk@1 );
	
	C1_1 = CB G7_1( C1T_1@0, C0_1@0 );
	
	LO_1 = D G8_1 (LO_0@1, clk@0 );
	XO_1 = D G10_1(XO_0@1, clk@0 );
	RO_1 = D G11_1(RO_0@1, clk@0 );

	s_in2= NDRO ND2( RO_1@2, LO_1@2, S1_1@3);

#--------------------------------------------------
# PE 2
#--------------------------------------------------

	Y_2  = ND G1_2( LO_1@0, y_in@1, LO_1@2 );
	PP_2 = ND G2_2( LO_1@0, Y_2@1, XO_1@2 );
	
	S0_2 = XOR G3_2( PP_2@0, s_in2@0, clk@1 );
	C0_2 = AND G4_2( PP_2@0, s_in2@0, clk@1 );
	
	
	S1_2 = XOR G5_2( S0_2@0, C1_2@0, clk@1 );
	C1T_2= AND G6_2( S0_2@0, C1_2@0, clk@1 );
	
	C1_2 = CB G7_2( C1T_2@0, C0_2@0 );
	
	LO_2 = D G8_2 (LO_1@1, clk@0 );
	XO_2 = D G10_2(XO_1@1, clk@0 );
	RO_2 = D G11_2(RO_1@1, clk@0 );

	s_in3= NDRO ND3( RO_2@2, LO_2@2, S1_2@3);

#--------------------------------------------------
# PE 3
#--------------------------------------------------

	Y_3  = ND G1_3( LO_2@0, y_in@1, LO_2@2 );
	PP_3 = ND G2_3( LO_2@0, Y_3@1, XO_2@2 );
	
	S0_3 = XOR G3_3( PP_3@0, s_in3@0, clk@1 );
	C0_3 = AND G4_3( PP_3@0, s_in3@0, clk@1 );
	
	
	S1_3 = XOR G5_3( S0_3@0, C1_3@0, clk@1 );
	C1T_3= AND G6_3( S0_3@0, C1_3@0, clk@1 );
	
	C1_3 = CB G7_3( C1T_3@0, C0_3@0 );
	
	LO_3 = D G8_3 (LO_2@1, clk@0 );
	XO_3 = D G10_3(XO_2@1, clk@0 );
	RO_3 = D G11_3(RO_2@1, clk@0 );

	s_in4= NDRO ND4( RO_3@2, LO_3@2, S1_3@3);

#--------------------------------------------------
# PE 4
#--------------------------------------------------

	Y_4  = ND G1_4( LO_3@0, y_in@1, LO_3@2 );
	PP_4 = ND G2_4( LO_3@0, Y_4@1, XO_3@2 );
	
	S0_4 = XOR G3_4( PP_4@0, s_in4@0, clk@1 );
	C0_4 = AND G4_4( PP_4@0, s_in4@0, clk@1 );
	
	
	S1_4 = XOR G5_4( S0_4@0, C1_4@0, clk@1 );
	C1T_4= AND G6_4( S0_4@0, C1_4@0, clk@1 );
	
	C1_4 = CB G7_4( C1T_4@0, C0_4@0 );
	
	LO_4 = D G8_4 (LO_3@1, clk@0 );
	XO_4 = D G10_4(XO_3@1, clk@0 );
	RO_4 = D G11_4(RO_3@1, clk@0 );

#--------------------------------------------------

	assign y_out     = y_in;
	assign s_out     = S1_4;
	assign load_out  = LO_4;
	assign x_out     = XO_4;
	assign reset_out = RO_4;
}


